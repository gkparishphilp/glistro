-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["enemy"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 100000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -29, 5  ,  -24, -46  ,  -8, -52  ,  15, -50  ,  36, 1  ,  3, 54  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 100000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -24, -46  ,  -29, 5  ,  -64, -8  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 100000, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   36, 1  ,  15, -50  ,  64, -10  }
                    }
                    
                    
                    
		}
		
		, 
		["hero"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 25, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -18, 43  ,  -48, 11  ,  -45, -48  ,  6, -58  ,  42, 28  ,  34, 51  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 25, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   41, 0  ,  41, 16  ,  23, -24  ,  40, -22  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 25, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   6, -58  ,  -45, -48  ,  -25, -63  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 25, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   18, -30  ,  6, -58  ,  18, -43  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 25, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   42, 28  ,  18, -30  ,  23, -24  ,  41, 16  }
                    }
                    
                    
                    
		}
		
		, 
		["star"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 0, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   31, 15  ,  0, 42  ,  -29, 62  ,  -35, 59  ,  -35, 17  ,  -25, -22  ,  18, -26  ,  63, -16  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 0, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   18, -26  ,  -25, -22  ,  -2, -63  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 0, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -25, -22  ,  -35, 17  ,  -64, -17  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 0, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   0, 42  ,  31, 15  ,  34, 58  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

